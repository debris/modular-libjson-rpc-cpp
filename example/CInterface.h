/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_CINTERFACE_H_
#define JSONRPC_CPP_STUB_CINTERFACE_H_

#include <jsonrpccpp/server.h>

class CInterface : public jsonrpc::AbstractServer<CInterface>
{
    public:
        CInterface(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<CInterface>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("hello", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &CInterface::helloI);
            this->bindAndAddMethod(jsonrpc::Procedure("world", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING,  NULL), &CInterface::worldI);
        }

        inline virtual void helloI(const Json::Value &request, Json::Value &response)
        {
            response = this->hello(request[0u].asString());
        }
        inline virtual void worldI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->world();
        }
        virtual std::string hello(const std::string& param1) = 0;
        virtual std::string world() = 0;
};

#endif //JSONRPC_CPP_STUB_CINTERFACE_H_
