/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_BINTERFACE_H_
#define JSONRPC_CPP_STUB_BINTERFACE_H_

#include <jsonrpccpp/server.h>

class BInterface : public jsonrpc::AbstractServer<BInterface>
{
    public:
        BInterface(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<BInterface>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("up", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &BInterface::upI);
            this->bindAndAddMethod(jsonrpc::Procedure("down", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING,  NULL), &BInterface::downI);
        }

        inline virtual void upI(const Json::Value &request, Json::Value &response)
        {
            response = this->up(request[0u].asString());
        }
        inline virtual void downI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->down();
        }
        virtual std::string up(const std::string& param1) = 0;
        virtual std::string down() = 0;
};

#endif //JSONRPC_CPP_STUB_BINTERFACE_H_
