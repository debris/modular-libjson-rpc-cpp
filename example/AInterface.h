/**
 * This file is generated by jsonrpcstub, DO NOT CHANGE IT MANUALLY!
 */

#ifndef JSONRPC_CPP_STUB_AINTERFACE_H_
#define JSONRPC_CPP_STUB_AINTERFACE_H_

#include <jsonrpccpp/server.h>

class AInterface : public jsonrpc::AbstractServer<AInterface>
{
    public:
        AInterface(jsonrpc::AbstractServerConnector &conn, jsonrpc::serverVersion_t type = jsonrpc::JSONRPC_SERVER_V2) : jsonrpc::AbstractServer<AInterface>(conn, type)
        {
            this->bindAndAddMethod(jsonrpc::Procedure("first", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING, "param1",jsonrpc::JSON_STRING, NULL), &AInterface::firstI);
            this->bindAndAddMethod(jsonrpc::Procedure("second", jsonrpc::PARAMS_BY_POSITION, jsonrpc::JSON_STRING,  NULL), &AInterface::secondI);
        }

        inline virtual void firstI(const Json::Value &request, Json::Value &response)
        {
            response = this->first(request[0u].asString());
        }
        inline virtual void secondI(const Json::Value &request, Json::Value &response)
        {
            (void)request;
            response = this->second();
        }
        virtual std::string first(const std::string& param1) = 0;
        virtual std::string second() = 0;
};

#endif //JSONRPC_CPP_STUB_AINTERFACE_H_
